void		clear_stdin()
{
	char	v = 0;

	while (v != 0xff)
	{
		v = getchar();
		if (v == '\n') return;
	}
}

unsigned int	get_unum()
{
	unsigned int	v = 0;

	fflush(stdout);
	scanf("%u", v);
	clear_stdin();
	return var;
}

void		decrypt(int32_t arg1)
{
	int32_t	canary;
	int32_t	tab[4];
	int32_t dh;
	int32_t 28h;
	uint32_t 24h;

	// canary = gs:[0x14];
	// canary |= canary;

	tab[0] = 0x757c7d51;
	tab[1] = 0x67667360;
	tab[2] = 0x7b66737e;
	tab[3] = 0x33617c7d;

	(char)dh = 0;
	24h = strlen(tab[0]);
	28h = 0;
	while (28h < 24h)
	{
		(char)(&tab[0] + 28h) = 0xFF & (tab[1] ^ (char)(&tab[0] + 28h));
		28h += 1;
	}

	if (strncmp((char *)(&tab[0]), "Congratulations!", 17) == 0)
	   system("/bin/sh");
	else
	   puts("\nInvalid Password");

	// check canary value
	return;
}

void		test(int32_t arg1, int32_t ch)
{
	uint32_t	tmp;

	ch -= arg1;
	if (ch > 21)
	   decrypt(rand());
	else
	{
		tmp = ch << 2;
		tmp += 0x80489f0;
		// some wired things
		decrypt(tmp);
	}
	return;
}

int	main(int c, char **argv)
{
	int32_t	v1;

	srand(time(0));
	puts("***********************************");
	puts("*\t\tlevel03\t\t**");
	puts("***********************************");
	printf("Password:");
	scanf("%d", v1);
	test(v1, 0x1337d00d);

	return 0;
}